{"componentChunkName":"component---src-templates-article-js","path":"/code-of-conduct/","result":{"data":{"mdx":{"id":"36ea8ec5-4599-5d8c-80d9-46df44ab3d07","excerpt":"Contributor & Community Code of Conduct As contributors and maintainers of this project, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting featureâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-09-28T00:00:00.000Z\",\n  \"title\": \"Superfluid Contributor & Community Code of Conduct\",\n  \"categories\": [\"code-of-conduct\"],\n  \"description\": \"The Superfluid Community Code of Conduct defines how this community is dedicated to providing a harassment-free experience for everyone. We do not tolerate harassment of participants in any form.\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"contributor--community-code-of-conduct\"\n  }, \"Contributor & Community Code of Conduct\"), mdx(\"p\", null, \"As contributors and maintainers of this project, and in the interest of\\nfostering an open and welcoming community, we pledge to respect all people who\\ncontribute through reporting issues, posting feature requests, updating\\ndocumentation, submitting pull requests or patches, and other activities.\"), mdx(\"p\", null, \"We are committed to making participation in this project a harassment-free\\nexperience for everyone, regardless of level of experience, gender, gender\\nidentity and expression, sexual orientation, disability, personal appearance,\\nbody size, race, ethnicity, language proficiency, age, religion, or nationality.\"), mdx(\"p\", null, \"Examples of unacceptable behavior by participants include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The use of sexualized language or imagery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Personal attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trolling or insulting/derogatory comments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public or private harassment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publishing other's private information, such as physical or electronic\\naddresses, without explicit permission\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fraudulent or deceitful conduct\")), mdx(\"p\", null, \"Project maintainers have the right and responsibility to remove, edit, or\\nreject comments, commits, code, wiki edits, issues, and other contributions\\nthat are not aligned to this Code of Conduct, or to ban temporarily or\\npermanently any contributor for other behaviors that they deem inappropriate,\\nthreatening, offensive, or harmful.\"), mdx(\"p\", null, \"By adopting this Code of Conduct, project maintainers commit themselves to\\nfairly and consistently applying these principles to every aspect of managing\\nthis project. Project maintainers who do not follow or enforce the Code of\\nConduct may be permanently removed from the project team.\"), mdx(\"p\", null, \"This Code of Conduct applies both within project spaces and in public spaces\\nwhen an individual is representing the project or its community.\"), mdx(\"p\", null, \"Instances of abusive, harassing, or otherwise unacceptable behavior may be\\nreported by contacting a project maintainer at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"mailto:support@superfluid.finance\"\n  }), \"support@superfluid.finance\"), \" All\\ncomplaints will be reviewed and investigated and will result in a response that\\nis deemed necessary and appropriate to the circumstances. Maintainers are\\nobligated to maintain confidentiality with regard to the reporter of an\\nincident.\"), mdx(\"p\", null, \"This Code of Conduct is adapted from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://contributor-covenant.org\"\n  }), \"Contributor Covenant\"), \",\\nversion 1.3.0, available at\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://contributor-covenant.org/version/1/3/0/\"\n  }), \"http://contributor-covenant.org/version/1/3/0/\")));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"tableOfContents":{"items":[{"url":"#contributor--community-code-of-conduct","title":"Contributor & Community Code of Conduct"}]},"fields":{"slug":"/code-of-conduct/","guide":"code-of-conduct-guide","github":"undefined/content/code-of-conduct/index.mdx"},"frontmatter":{"title":"Superfluid Contributor & Community Code of Conduct","shareImage":null,"categories":["code-of-conduct"],"showToc":null}}},"pageContext":{"id":"36ea8ec5-4599-5d8c-80d9-46df44ab3d07"}},"staticQueryHashes":["1655584978","2867478693"]}